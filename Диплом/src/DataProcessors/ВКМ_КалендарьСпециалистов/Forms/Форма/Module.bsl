
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(ПоложениеШкалыВр) Тогда
		ПоложениеШкалыВр = "Верх";
	КонецЕсли;	
	
	Элементы.Специалисты.ТолькоПросмотр = Не ВыбиратьСпециалистов;
	Элементы.Клиенты.ТолькоПросмотр = Не ВыбиратьКлиентов;

	ЗаполнитьКалендарьНаСервере(НачалоДня(Период.ДатаНачала), КонецДня(Период.ДатаОкончания));

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ОбслуживаниеКлиентов" Тогда
		ЗаполнитьКалендарьНаСервере(НачалоДня(Период.ДатаНачала), КонецДня(Период.ДатаОкончания));
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	ЗаполнитьКалендарьНаСервере(НачалоДня(Период.ДатаНачала), КонецДня(Период.ДатаОкончания));
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Период.ДатаНачала = НачалоДня(ТекущиеПериодыОтображения[0].Начало);
	Период.ДатаОкончания = КонецДня(ТекущиеПериодыОтображения[0].Конец);

	ЗаполнитьКалендарьНаСервере(Период.ДатаНачала, Период.ДатаОкончания);
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПередНачаломБыстрогоРедактирования(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Если ЗначениеЗаполнено(Элемент.ВыделенныеЭлементы[0].Значение) Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", Элемент.ВыделенныеЭлементы[0].Значение);

		ОткрытьФорму("Документ.ВКМ_ОбслуживаниеКлиентов.Форма.ФормаДокумента", ПараметрыФормы);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КалендарьПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НовыйЭлемент Тогда
	
		ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;
		ДатаНачало = ВыделенныеЭлементы[0].Начало;
		ДатаКонец = ВыделенныеЭлементы[0].Конец;
		ВведенныйТекст = ВыделенныеЭлементы[0].Текст;

		ЗначенияИзмерений = Элемент.ВыделенныеЭлементы[0].ЗначенияИзмерений;
		
		Специалист = ПредопределенноеЗначение("Справочник.ВКМ_ФизическиеЛица.ПустаяСсылка");

		Для Каждого ЭлементИзмерения Из ЗначенияИзмерений Цикл
			Специалист = ЭлементИзмерения.Значение;
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Специалист", Специалист);
		ПараметрыФормы.Вставить("ДатаПроведенияРабот", НачалоДня(ДатаНачало));
		ПараметрыФормы.Вставить("ВремяНачалаРабот", ДатаНачало);
		ПараметрыФормы.Вставить("ВремяОкончанияРабот", ДатаКонец);
		ПараметрыФормы.Вставить("ОписаниеПроблемы", ВведенныйТекст);
		
		ОткрытьФорму("Документ.ВКМ_ОбслуживаниеКлиентов.Форма.ФормаДокумента", ПараметрыФормы);
	
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Редактирование данных осуществляется непосредственно в документе");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)

	Если НовыйЭлемент Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Для добавления данных в Календарь специалистов воспользуйтесь режимом редактирования");
		ОтменаРедактирования = Истина;
		Возврат;
	КонецЕсли;

	СсылкаНаДокумент = Элемент.ВыделенныеЭлементы[0].Значение;
	
	Если Не ЗначениеЗаполнено(СсылкаНаДокумент) Тогда
		ОтменаРедактирования = Истина;
	Иначе
		ДатаНачало = Элемент.ВыделенныеЭлементы[0].Начало;
		ДатаКонец = Элемент.ВыделенныеЭлементы[0].Конец;
		ЗначенияИзмерений = Элемент.ВыделенныеЭлементы[0].ЗначенияИзмерений;
		
		Для Каждого ЭлементИзмерения Из ЗначенияИзмерений Цикл
			Специалист = ЭлементИзмерения.Значение;
		КонецЦикла;
		
		ПараметрыПеретаскивания = Новый Структура;
		ПараметрыПеретаскивания.Вставить("СсылкаНаДокумент", СсылкаНаДокумент);
		ПараметрыПеретаскивания.Вставить("Специалист", Специалист);
		ПараметрыПеретаскивания.Вставить("ДатаПроведенияРабот", НачалоДня(ДатаНачало));
		ПараметрыПеретаскивания.Вставить("ВремяНачалаРабот", ДатаНачало);
		ПараметрыПеретаскивания.Вставить("ВремяОкончанияРабот", ДатаКонец);

		ИзменитьДанныеВДокументеПриПереносеНаСервере(ПараметрыПеретаскивания);
		
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ПоложениеШкалыВремениПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Период) Тогда
		ЗаполнитьКалендарьНаСервере(Период.ДатаНачала, Период.ДатаОкончания);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбиратьСпециалистовПриИзменении(Элемент)

	Элементы.Специалисты.ТолькоПросмотр = Не ВыбиратьСпециалистов;

	Если Не ВыбиратьСпециалистов Или ЗначениеЗаполнено(Специалисты) Тогда

		Если ЗначениеЗаполнено(Период) Тогда
			ЗаполнитьКалендарьНаСервере(Период.ДатаНачала, Период.ДатаОкончания);
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбиратьКлиентовПриИзменении(Элемент)
	
	Элементы.Клиенты.ТолькоПросмотр = Не ВыбиратьКлиентов;
	
	Если Не ВыбиратьКлиентов Или ЗначениеЗаполнено(Клиенты) Тогда

		Если ЗначениеЗаполнено(Период) Тогда
			ЗаполнитьКалендарьНаСервере(Период.ДатаНачала, Период.ДатаОкончания);
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпециалистыПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Период) Тогда
		ЗаполнитьКалендарьНаСервере(Период.ДатаНачала, Период.ДатаОкончания);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КлиентыПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Период) Тогда
		ЗаполнитьКалендарьНаСервере(Период.ДатаНачала, Период.ДатаОкончания);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменитьДанныеВДокументеПриПереносеНаСервере(ПараметрыПереноса)
	Документы.ВКМ_ОбслуживаниеКлиентов.ИзмененияДанныхВДокументеПриПереносеДатыВремениВКалендаре(ПараметрыПереноса);	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКалендарьНаСервере(ДатаНачала, ДатаОкончания)

	Если Не ЗначениеЗаполнено(Период) Тогда
		ОбщегоНазначения.СообщитьПользователю("Не выбран период",,Элементы.Период,Период);
		Возврат;
	КонецЕсли;
	
	Календарь.ТекущиеПериодыОтображения.Очистить();
	Календарь.ТекущиеПериодыОтображения.Добавить(ДатаНачала, ДатаОкончания);
	
	Если ПоложениеШкалыВр = "Верх" Тогда
		Календарь.ШкалаВремени.Положение = ПоложениеШкалыВремени.Верх;
	Иначе
		Календарь.ШкалаВремени.Положение = ПоложениеШкалыВремени.Лево;
	КонецЕсли;

	ИзмеренияКалендаря = Календарь.Измерения;
	ИзмеренияКалендаря.Очистить();
	
	ИзмерениеСпециалисты = ИзмеренияКалендаря.Добавить("Специалисты");
	
	ЭлементыКалендаря = Календарь.Элементы;
	ЭлементыКалендаря.Очистить();

	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентов.Ссылка КАК Ссылка,
		|	ВКМ_ОбслуживаниеКлиентов.Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиентов.ВремяНачалаРабот КАК ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиентов.ВремяОкончанияРабот КАК ВремяОкончанияРабот,
		|	ВКМ_ОбслуживаниеКлиентов.Специалист.Представление КАК СпециалистПредставление,
		|	ВКМ_ОбслуживаниеКлиентов.Дата КАК Дата,
		|	ВКМ_ОбслуживаниеКлиентов.Номер КАК Номер
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И НЕ ВКМ_ОбслуживаниеКлиентов.ПометкаУдаления
		|	И (НЕ &ВыбиратьСпециалистов
		|	ИЛИ ВКМ_ОбслуживаниеКлиентов.Специалист В (&Специалисты))
		|	И (НЕ &ВыбиратьКлиентов
		|	ИЛИ ВКМ_ОбслуживаниеКлиентов.Клиент В (&Клиенты))
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаПроведенияРабот,
		|	ВремяНачалаРабот,
		|	Специалист";
	
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ВыбиратьСпециалистов", ВыбиратьСпециалистов);
	Запрос.УстановитьПараметр("Специалисты", Специалисты);
	Запрос.УстановитьПараметр("ВыбиратьКлиентов", ВыбиратьКлиентов);
	Запрос.УстановитьПараметр("Клиенты", Клиенты);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ШаблонТекстаЭлемента = НСтр("ru = 'Документ Обслуживание клиентов: № %1 от %2'");

	Пока Выборка.Следующий() Цикл
		
		НовыйСпециалист = ИзмерениеСпециалисты.Элементы.Найти(Выборка.Специалист);
		Если НовыйСпециалист = Неопределено Тогда
			НовыйСпециалист = ИзмерениеСпециалисты.Элементы.Добавить(Выборка.Специалист);
			НовыйСпециалист.Текст = Выборка.СпециалистПредставление;
		КонецЕсли;
		
		СоответствиеЗначений = Новый Соответствие;
		СоответствиеЗначений.Вставить("Специалисты", Выборка.Специалист);
		
		РазницаВремениНачало = Выборка.ВремяНачалаРабот - НачалоДня(Выборка.ВремяНачалаРабот);
		РазницаВремениКонец = Выборка.ВремяОкончанияРабот - НачалоДня(Выборка.ВремяОкончанияРабот);
		НачалоДаты = НачалоДня(Выборка.ДатаПроведенияРабот);
		
		ДатаВремяНачало =НачалоДаты + РазницаВремениНачало;
		ДатаВремяОкончание = НачалоДаты + РазницаВремениКонец;
		
		НовыйЭлемент = ЭлементыКалендаря.Добавить(ДатаВремяНачало, ДатаВремяОкончание);
		НовыйЭлемент.ЗначенияИзмерений = Новый ФиксированноеСоответствие(СоответствиеЗначений);
		НовыйЭлемент.Текст = СтрШаблон(ШаблонТекстаЭлемента, Число(Выборка.Номер),Формат(Выборка.Дата,"ДФ=dd.MM.yyyy;"));
		НовыйЭлемент.Значение = Выборка.Ссылка;
		НовыйЭлемент.ЦветФона = WebЦвета.СветлоЗолотистый;
		
		Если НачалоДаты > ТекущаяДатаСеанса() Тогда
			НовыйЭлемент.ЦветФона = WebЦвета.СветлоКоралловый;
		КонецЕсли;			
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
