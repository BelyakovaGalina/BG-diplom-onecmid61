
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ОплатаЗаЧасРаботы = 0;
	
	Если Справочники.ДоговорыКонтрагентов.ВКМ_ЕстьДоговорСТипомАбонентскаяПлатаНаДату(Договор,Дата,,ОплатаЗаЧасРаботы) Тогда
		
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		
		ЧасыКОплате = ПолучитьКоличествоЧасовКОплате(Ссылка);
		
		Если ЧасыКОплате <> 0 Тогда
			// регистр ВКМ_ВыполненныеКлиентуРаботы
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.Период = Дата;
			Движение.Клиент = Клиент;
			Движение.Договор = Договор;
			Движение.КоличествоЧасов = ЧасыКОплате;
			Движение.СуммаКОплате = ЧасыКОплате * ОплатаЗаЧасРаботы;

			// регистр ВКМ_ВыполненныеСотрудникомРаботы
			ПроцентОплаты = ВКМ_ОбщиеПроцедурыИФункции.ВКМ_ПолучитьПроцентОплатыСотрудника(Специалист, Дата);
			
			Если ПроцентОплаты = Неопределено Тогда	
				ТекстСообщения = СтрШаблон(НСтр("ru = 'У сотрудника %1 не введен процент оплаты'"), Специалист);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			Если ПроцентОплаты <> 0 Тогда	
				ДвижениеПоСотруднику = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
				ДвижениеПоСотруднику.Период = Дата;
				ДвижениеПоСотруднику.Сотрудник = Специалист;
				ДвижениеПоСотруднику.ЧасовКОплате = Движение.КоличествоЧасов;
				ДвижениеПоСотруднику.СуммаКОплате = Движение.СуммаКОплате * ПроцентОплаты / 100;
			КонецЕсли;
						
		КонецЕсли;
		
	Иначе
		
		Отказ = Истина;
		
		ТекстСообщения = НСтр("ru = 'Выбранный договор не соответствует условиям: 
			|Вид договора должен принимать значение Абонентское обслуживание,
			|Дата документа должна лежать между датами начала и окончания действия договора'");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
	
	КонецЕсли;

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ//TODO: Вставить содержимое обработчика
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
    	Возврат;
	КонецЕсли;
	
	ТекстИзменений = "";

	Если ЭтоНовый() Тогда
		
		ШаблонСообщения = НСтр("ru = 'Новый документ: %1
							|Клиент: %2
							|Договор: %3
							|Специалист: %4
							|Дата проведения работ: %5
							|Время работ (план): с %6 по %7'");
	
		ТекстИзменений = СтрШаблон(ШаблонСообщения, " ",
							Строка(Клиент),
							Строка(Договор),
							Строка(Специалист),
							Формат(ДатаПроведенияРабот,"ДЛФ=D;"),
							Формат(ВремяНачалаРабот,"ДФ=ЧЧ:мм;"),
							Формат(ВремяОкончанияРабот,"ДФ=ЧЧ:мм;"));

	ИначеЕсли Модифицированность() Тогда

		ДанныеВБазе = ПрочитатьДанныеДокументаИзБазы(Ссылка);
		
		Если ЗначениеЗаполнено(ДанныеВБазе) Тогда
	
			НомерДата = СтрШаблон(НСтр("ru = '№ %1 от %2 г'"), Число(Номер), Формат(Дата,"ДЛФ=D;"));

			ТекстИзменений1 = СтрШаблон(НСтр("ru = 'Изменения в документе %1 %2'"), НомерДата);
			ТекстИзменений2 = "";
			
			Если ДанныеВБазе["Специалист"] <> Специалист Тогда
				Замена = СтрШаблон(НСтр("ru = 'Специалист %1 заменен на %2'"), ДанныеВБазе["Специалист"], Специалист); 	
				ТекстИзменений2 = ТекстИзменений2 + Символы.ПС + Замена;
			КонецЕсли;
			Если ДанныеВБазе["ДатаПроведенияРабот"] <> ДатаПроведенияРабот Тогда	
				Замена = СтрШаблон(НСтр("ru = 'Дата проведения работ %1 заменена на %2'"), 
						Формат(ДанныеВБазе["ДатаПроведенияРабот"],"ДЛФ=D;"), Формат(ДатаПроведенияРабот,"ДЛФ=D;")); 	
				ТекстИзменений2 = ТекстИзменений2 + Символы.ПС + Замена;
			КонецЕсли;
			Если ДанныеВБазе["ВремяНачалаРабот"] <> ВремяНачалаРабот Тогда	
				Замена = СтрШаблон(НСтр("ru = 'Время начала работ %1 заменено на %2'"), 
						Формат(ДанныеВБазе["ВремяНачалаРабот"],"ДФ=ЧЧ:мм;"), Формат(ВремяНачалаРабот,"ДФ=ЧЧ:мм;")); 	
				ТекстИзменений2 = ТекстИзменений2 + Символы.ПС + Замена;
			КонецЕсли;
			Если ДанныеВБазе["ВремяОкончанияРабот"] <> ВремяОкончанияРабот Тогда	
				Замена = СтрШаблон(НСтр("ru = 'Время окончания работ %1 заменено на %2'"), 
						Формат(ДанныеВБазе["ВремяОкончанияРабот"],"ДФ=ЧЧ:мм;"), Формат(ВремяОкончанияРабот,"ДФ=ЧЧ:мм;")); 	
				ТекстИзменений2 = ТекстИзменений2 + Символы.ПС + Замена;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекстИзменений2) Тогда
				ТекстИзменений = ТекстИзменений1 + ТекстИзменений2; 
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;

	Если ЗначениеЗаполнено(ТекстИзменений) Тогда
		
		Элемент = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		Элемент.ТекстСообщения = ТекстИзменений;
		Элемент.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьКоличествоЧасовКОплате(СсылкаНаДокумент)
	
	КоличествоЧасов = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.ЧасыКОплатеКлиенту), 0) КАК ЧасыКОплатеКлиенту
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентовВыполненныеРаботы.Ссылка = &Ссылка";	

	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
	КонецЕсли;
	
	Возврат КоличествоЧасов;  
	
КонецФункции

Функция ПрочитатьДанныеДокументаИзБазы(СсылкаНаДокумент)

	ДанныеВБазе = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентов.Дата КАК Дата,
		|	ВКМ_ОбслуживаниеКлиентов.Номер КАК Номер,
		|	ВКМ_ОбслуживаниеКлиентов.Клиент КАК Клиент,
		|	ВКМ_ОбслуживаниеКлиентов.Договор КАК Договор,
		|	ВКМ_ОбслуживаниеКлиентов.Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот КАК ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиентов.ВремяНачалаРабот КАК ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиентов.ВремяОкончанияРабот КАК ВремяОкончанияРабот
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ДанныеВБазе.Вставить("Дата", Выборка.Дата);
		ДанныеВБазе.Вставить("Номер", Выборка.Номер);
		ДанныеВБазе.Вставить("Клиент", Выборка.Клиент);
		ДанныеВБазе.Вставить("Договор", Выборка.Договор);
		ДанныеВБазе.Вставить("Специалист", Выборка.Специалист);
		ДанныеВБазе.Вставить("ДатаПроведенияРабот", Выборка.ДатаПроведенияРабот);
		ДанныеВБазе.Вставить("ВремяНачалаРабот", Выборка.ВремяНачалаРабот);
		ДанныеВБазе.Вставить("ВремяОкончанияРабот", Выборка.ВремяОкончанияРабот);
	КонецЕсли;
	
	Возврат ДанныеВБазе; 
	
КонецФункции
	
#КонецОбласти

#КонецЕсли
