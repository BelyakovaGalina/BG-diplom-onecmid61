
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьУсловноеОформлениеСпискаОтпусковСотрудников();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников

&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	КоличествоДнейОтпускаПоСтроке(Элементы.ОтпускаСотрудников.ТекущиеДанные);
КонецПроцедуры


&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	КоличествоДнейОтпускаПоСтроке(Элементы.ОтпускаСотрудников.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ОтпускаСотрудниковСотрудникПриИзменении(Элемент)
	КоличествоДнейОтпускаПоСтроке(Элементы.ОтпускаСотрудников.ТекущиеДанные);
КонецПроцедуры
#КонецОбласти



#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура АнализГрафика(Команда)
	
	Адрес = ПоместитьОбъектВоВременноеХранилищеНаСервере();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Адрес", Адрес);
	
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.ФормаАнализГрафика", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПоместитьОбъектВоВременноеХранилищеНаСервере()
	ТаблицаЗначенийОтпуска = Объект.ОтпускаСотрудников.Выгрузить();
	Возврат ПоместитьВоВременноеХранилище(ТаблицаЗначенийОтпуска, УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеСпискаОтпусковСотрудников()
	
	ЭлементОформления = ЭтотОбъект.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Использование = Истина;
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.ПревышениеДней");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудников");
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.СветлоРозовый);
	
КонецПроцедуры
	
&НаКлиенте
Процедура КоличествоДнейОтпускаПоСтроке(ТекущиеДанные)
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ДатаОкончания) Или  Не ЗначениеЗаполнено(ТекущиеДанные.ДатаНачала)
		Или  ТекущиеДанные.ДатаНачала > ТекущиеДанные.ДатаОкончания Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Дни = (НачалоДня(ТекущиеДанные.ДатаОкончания) - НачалоДня(ТекущиеДанные.ДатаНачала)) / (60 * 60 * 24) + 1;
	
	ОбщееКоличествоДнейОтпускаСотрудника(ТекущиеДанные.Сотрудник);
	
КонецПроцедуры

&НаСервере
Процедура ОбщееКоличествоДнейОтпускаСотрудника(Сотрудник)
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Сотрудник", Сотрудник);
	ОтборПоСотруднику = Объект.ОтпускаСотрудников.НайтиСтроки(Отбор);

	Если ОтборПоСотруднику.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Дни = 0;			
	Для Каждого СтрокаОтбора Из ОтборПоСотруднику Цикл
		Дни = Дни + СтрокаОтбора.Дни;
	КонецЦикла;

	Для Каждого СтрокаОтбора Из ОтборПоСотруднику Цикл
		Если Дни > 28 Тогда
			СтрокаОтбора.ПревышениеДней = Истина;
		Иначе
			СтрокаОтбора.ПревышениеДней = Ложь;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти
