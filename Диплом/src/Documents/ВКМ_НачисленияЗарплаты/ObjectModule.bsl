#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	СформироватьДвиженияОсновныхНачислений();    
	СформироватьЗаписиСторно();    

	Движения.ВКМ_ОсновныеНачисления.Записать();
	
	РассчитатьОклад();
	РассчитатьОтпуск();
	
	СформироватьДвиженияУдержаний();    
	РассчитатьНДФЛ();
	
	Записать();
	
	СформироватьДвиженияПоВзаиморасчетамССотрудниками();    

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвиженияОсновныхНачислений()
	
	ГрафикПятидневка = Справочники.ВКМ_ГрафикиРабот.Пятидневка;
	ГрафикКалендарныеДни = Справочники.ВКМ_ГрафикиРабот.КалендарныеДни;
	
	// регистр ВКМ_ОсновныеНачисления
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;

	Для Каждого ТекСтрокаНачисления из Начисления Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ТекСтрокаНачисления.ВидРасчета;
		Движение.ПериодРегистрации = Дата;
		Движение.ПериодДействияНачало = ТекСтрокаНачисления.НачалоПериода;
		Движение.ПериодДействияКонец = ТекСтрокаНачисления.КонецПериода;
		Движение.Сотрудник = ТекСтрокаНачисления.Сотрудник;
		Движение.Сумма = 0;
		Движение.Дни = 0;
		Если Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Движение.БазовыйПериодНачало = ТекСтрокаНачисления.НачалоПериода;
			Движение.БазовыйПериодКонец = ТекСтрокаНачисления.КонецПериода;
			Движение.Показатель = ТекСтрокаНачисления.Показатель;
			Движение.ГрафикРаботы = ГрафикПятидневка;
		ИначеЕсли Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск Тогда
			Движение.БазовыйПериодНачало = ДобавитьМесяц(ТекСтрокаНачисления.НачалоПериода,-12);
			Движение.БазовыйПериодКонец = ДобавитьМесяц(ТекСтрокаНачисления.КонецПериода,-1);
			Движение.ГрафикРаботы = ГрафикКалендарныеДни;
		ИначеЕсли Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ПроцентЗаВыполненыеРаботы Тогда
			Движение.Показатель = ТекСтрокаНачисления.Показатель;
			Движение.Сумма = Движение.Показатель;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура СформироватьЗаписиСторно()

	СторноЗаписи = Движения.ВКМ_ОсновныеНачисления.ПолучитьДополнение();
	
	Для каждого Запись Из СторноЗаписи Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		ЗаполнитьЗначенияСвойств(Движение,Запись);
		
		Движение.ПериодДействияНачало = Запись.ПериодДействияНачалоСторно;
		Движение.ПериодДействияКонец = Запись.ПериодДействияКонецСторно;
		Движение.ПериодРегистрации = Дата;  
		Движение.Сумма = 0;
		Движение.Дни = 0;      
		Движение.Сторно = Истина;
	КонецЦикла;
	
КонецПроцедуры           


Процедура РассчитатьОклад()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План,
		|	ЕСТЬNULL(ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &ВидРасчета
		|	И Регистратор = &Регистратор) КАК ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];

		Если Выборка.План <> 0 Тогда

			Движение.Сумма = Движение.Показатель * Выборка.Факт / Выборка.План;

			Движение.Дни = Выборка.Факт; 
			
			Если Движение.Сторно Тогда
				Движение.Сумма = -Движение.Сумма;
				Движение.Дни = -Движение.Дни;
			КонецЕсли;
		
			СтрокаНачисления = Начисления[Выборка.НомерСтроки - 1];
			СтрокаНачисления.Сумма = Движение.Сумма; 
			СтрокаНачисления.Дни = Движение.Дни;

		КонецЕсли;
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры           

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияДанныеГрафика.НомерСтроки,
		|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.СуммаБаза, 0) КАК СуммаБаза,
		|	ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.ДниБаза, 0) КАК ДниБаза,
		|	ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК ДниОтпуска
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(ВидРасчета = &ВидРасчета
		|	И Регистратор = &Регистратор) КАК ОсновныеНачисленияДанныеГрафика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			ВидРасчета = &ВидРасчета
		|		И Регистратор = &Регистратор) КАК ОсновныеНачисленияБазаОсновныеНачисления
		|		ПО ОсновныеНачисленияДанныеГрафика.Сотрудник = ОсновныеНачисленияБазаОсновныеНачисления.Сотрудник
		|		И
		|			ОсновныеНачисленияДанныеГрафика.ПериодДействияНачало = ОсновныеНачисленияБазаОсновныеНачисления.ПериодДействияНачало";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	Измерения = Новый Массив(1);
	Измерения[0] = "Сотрудник";
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Движения.ВКМ_ИспользованиеДнейОтпуска.Записывать = Истина;

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Движение.Дни = Выборка.ДниОтпуска;
		
		Если Выборка.ДниБаза <> 0 Тогда                               
			СреднийЗаработок = Выборка.СуммаБаза / Выборка.ДниБаза;
			Движение.Сумма = СреднийЗаработок * Выборка.ДниОтпуска;
			Движение.Показатель = СреднийЗаработок;
		КонецЕсли;

		СтрокаНачисления = Начисления[Выборка.НомерСтроки - 1];
		СтрокаНачисления.Сумма = Движение.Сумма;
		СтрокаНачисления.Дни = Движение.Дни; 
		СтрокаНачисления.Показатель = Движение.Показатель; 
			
		ДвижениеДнейОтпуска = Движения.ВКМ_ИспользованиеДнейОтпуска.ДобавитьРасход();
		ДвижениеДнейОтпуска.Период = Дата;
		ДвижениеДнейОтпуска.Сотрудник = Движение.Сотрудник;
		ДвижениеДнейОтпуска.Дни = Выборка.ДниОтпуска;
			
	КонецЦикла;

	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	Движения.ВКМ_ИспользованиеДнейОтпуска.Записать();
	
КонецПроцедуры           

Процедура СформироватьДвиженияУдержаний()
	// регистр ВКМ_Удержания
	Движения.ВКМ_Удержания.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.Сторно = Ложь;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(НачалоДня(Дата));
		Движение.БазовыйПериодКонец = КонецМесяца(КонецДня(Дата));
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = 0;
		Движение.Показатель = 13;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура РассчитатьНДФЛ()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.СуммаБаза,
		|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.Показатель
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,, Регистратор = &Регистратор
		|	И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления";
	
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);
	
	Измерения = Новый Массив(1);
	Измерения[0] = "Сотрудник";
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НДФЛ.Очистить();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		
		Если Выборка.СуммаБаза <> 0 Тогда                               
			Движение.Сумма = Окр(Выборка.СуммаБаза * Выборка.Показатель / 100, 0, 1);
			
			СтрокаУдержания = НДФЛ.Добавить();
			СтрокаУдержания.ВидРасчета = Движение.ВидРасчета;
			СтрокаУдержания.Сотрудник = Движение.Сотрудник;
			СтрокаУдержания.Сумма = Движение.Сумма; 
		КонецЕсли;
		
	КонецЦикла;

	Движения.ВКМ_Удержания.Записать( , Истина);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоВзаиморасчетамССотрудниками();    
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
	|	ВКМ_ОсновныеНачисления.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_КВыплате
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВКМ_Удержания.Сотрудник,
	|	-ВКМ_Удержания.Сумма
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КВыплате.Сотрудник КАК Сотрудник,
	|	СУММА(ВТ_КВыплате.Сумма) КАК Сумма
	|ИЗ
	|	ВТ_КВыплате КАК ВТ_КВыплате
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КВыплате.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник";

	Запрос.УстановитьПараметр("Регистратор", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();
	
	// регистр ВКМ_ВзаиморасчетыССотрудниками
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма;
	КонецЦикла;

	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();

КонецПроцедуры

#КонецОбласти

#КонецЕсли